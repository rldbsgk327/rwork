View(midwest)
subset(midwest, midwest$poptotal <=300000 & midwest$popasian <= 10000)
loc <- subset(midwest, midwest$poptotal <=300000 & midwest$popasian <= 10000)
loc
ggplot(data=midwest, aes(poptotal, popasian)) + geom_point() +
xlim(0, 300000) + ylim(0, 10000)
# midwest데이터를 이용해서 전체인구(poptotal) 아시아인구(popasian)간에
#어떤 관계가 있는지 알고싶다.
# x축은 전체인구, y축은 아시아인구로 된 산포도로 작성
# 단, 전체인구는 30만명 이하, 아시아 인구는 1만명 이하인 지역만 산포돌 표시하라.
options(scipen = 99)
ggplot(data=midwest, aes(poptotal, popasian)) + geom_point() +
xlim(0, 300000) + ylim(0, 10000)
ggplot(data=midwest, aes(poptotal, popasian)) + geom_point() +
xlim(0, 300000) + ylim(0, 10000)
# mpg데이터에서 구동방식(drv)별로 고속도로 평균연비(hwy)를 조회하고 그 결과를 표시
# 변수 2개-> 막대그래프
library(dplyr)
df_mpg <- mpg %>% group_by(drv) %>% summarise(mean_hwy=mean(hwy))
df_mpg
ggplot(data=df_mpg, aes(drv, mean_hwy)) + geom_point()
ggplot(data=df_mpg, aes(drv, mean_hwy)) + geom_col()
ggplot(data=df_mpg, aes(reorder(drv, mean_hwy))) + geom_col()
ggplot(data=df_mpg, aes(reorder(drv, mean_hwy), mean_hwy)) + geom_col()
ggplot(mpg, aes(drv)) + geom_bar()
ggplot(mpg, aes(hwy)) + geom_bar()
head(suv)
head(mpg)
View(mpg)
df_mpg <- mpg %>% filter(class=="suv") %>% summarise(mean(cty))
df_mpg
df_mpg <- mpg %>% filter(class=="suv") group_by(manufacturer)%>% summarise(mean(cty))
df_mpg
df_mpg <- mpg %>% filter(class=="suv") %>% group_by(manufacturer)%>% summarise(mean(cty))
df_mpg
df_mpg <- mpg %>% filter(class=="suv") %>% group_by(manufacturer)%>% summarise(mean_cty = mean(cty)) %>% arrange(desc(mean_cty)) %>% head(5)
df_mpg
ggplot(df_mpg, aes(mpg$manufacture, mpg$mean_cty)) + geom_col()
ggplot(df_mpg, aes(manufacture, mean_cty)) + geom_col()
ggplot(df_mpg, aes(manufacturer, mean_cty)) + geom_col()
ggplot(df_mpg, aes(reorder(manufacturer, mean_cty), mean_city)) + geom_col()
ggplot(df_mpg, aes(reorder(manufacturer, mean_cty), mean_cty)) + geom_col()
# 자동차 중에서 어떤 종류(class)가 가장 많은지 알고 싶다.
# 자동차 종류별 빈도를 그래프로 표시
table(mpg$class)
ggplot(mpg, aes(class)) + geom_bar()
#### 선 그래프: geom_line()
str(economics)
head(economics)
tail(economics)
ggplot(economics, aes(data, unemploy)) + geom_line()
ggplot(economics, aes(date, unemploy)) + geom_line()
ggplot(economics, aes(date, psavert)) + geom_line()
#### 상자 그래프: geom_boxplot()
ggplot(mpg, aes(drv, hwy))+ geom_boxplot()
#### 연습문제 1 ####
#install.packages("ggplot2")
library(ggplot2)
mpg$tot <- (mpg$cty + mpg$hwy) / 2
#-------------------------------
head(mpg)
#### 연습문제 1 ####
#install.packages("ggplot2")
library(ggplot2)
#-------------------------------
head(mpg)
library(dplyr)
mpg$tot <- mpg %>% summarise(cty, hwy)
mpg$tot
mpg$tot <- mpg %>% summarise(tot=mean(cty, hwy))
mpg$tot <- mpg %>% summarise(tot=mean(cty, hwy))
mpg$tot <- (mpg$cty + mpg$hwy) / 2
mpg$tot
df_comp <- mpg %>% filter(class=="compact") %>% select(class)
df_comp
df_suv <- mpg %>% filter(class=="suv") %>% select(class)
df_suv
#-------------------------------
head(mpg)
df_comp <- mpg %>% filter(class=="compact")
df_comp
df_suv <- mpg %>% filter(class=="suv")
df_suv
df_comp %>% summarise(mean_comp=mean(tot))
df_suv %>% summarise(df_suv=mean(tot))
mpg <- as.data.frame(ggplot2::mpg)
mpg
#-------------------------------
head(mpg)
mpg$tot <- (mpg$cty + mpg$hwy) / 2
df_comp <- mpg[mpg$class == "compact", ]
df_suv <- mpg[mpg$class == "suv", ]
mean(df_comp$tot)
mean(df_suv$tot)
mpg <- as.data.frame(ggplot2::mpg)
mpg
library(dplyr)
mpg$tot <- (mpg$cty + mpg$hwy) / 2
df_comp <- mpg %>% filter(class=="compact")
df_suv <- mpg %>% filter(class=="suv")
df_comp %>% summarise(mean_comp=mean(tot))
df_suv %>% summarise(df_suv=mean(tot))
mpg <- as.data.frame(ggplot2::mpg)
mpg
#-------------------------------
head(mpg)
head(ggplot2::mpg)
table(ggplot2::mpg$drv)
table(ggplot2::mpg$fl)
mpg <- as.data.frame(ggplot2::mpg)    # 바꿔놓
library(ggplot2)
# -----------------------------------
midwest <- as.data.frame(ggplot2::midwest)
head(midwest)
str(midwest)
#popadults는 해당 지역의 성인 인구, poptotal은 전체 인구를 나타낸다. midwest데이터에 #"전체 인구 대비 미성년 인구 백분률" 변수를 추가하고, 미성년 인구 백분율이 가장 높은 #상위 5개 county(지역)의 미성년 인구 백분율을 출력하시오.
library(dplyr)
midwest$"전체인구 대비 미성년 인구 백분율" <- midwest %>% (popadults/poptotal)*100
midwest$"전체인구 대비 미성년 인구 백분율" <- midwest %>% (popadults/poptotal)*100
i
midwest$"전체인구 대비 미성년 인구 백분율" <- midwest %>%
((poptotal-popadults)/poptotal)*100
midwest$pop_noadult <- midwest %>% ((poptotal-popadults)/poptotal)*100
#popadults는 해당 지역의 성인 인구, poptotal은 전체 인구를 나타낸다. midwest데이터에 #"전체 인구 대비 미성년 인구 백분률" 변수를 추가하고, 미성년 인구 백분율이 가장 높은 #상위 5개 county(지역)의 미성년 인구 백분율을 출력하시오.
library(dplyr)
midwest$pop_noadult <- midwest %>% ((poptotal-popadults)/poptotal)*100
midwest$pop_noadult <- midwest %>% ((midwest$poptotal-midwest$popadults)/midwest$poptotal)*100
midwest <- midwest %>% mutate(ratio_child= ((poptotal-popadults)/poptotal)*100)
midwest %>% select(county, ratio_child) %>% head(5)
library(ggplot2)
mpg <- as.data.frame(ggplot2::mpg)
head(mpg)
fuel <- data.frame(fl=c("c", "d", "e", "p", "r"), fl_price=c(2.35, 2.38, 2.11, 2.76, 2.22))
fuel
left_join(mpg, fuel, by="fl")
fuel <- data.frame(fl=c("c", "d", "e", "p", "r"), fl_price=c(2.35, 2.38, 2.11, 2.76, 2.22))
left_join(mpg, fuel, by="fl")
fuel <- data.frame(fl=c("c", "d", "e", "p", "r"), fl_price=c(2.35, 2.38, 2.11, 2.76, 2.22))
fuel
left_join(mpg, fuel, by="fl")
source("C:/datastudy/rwork/BasicProject/4-DataProcess.R", encoding = 'UTF-8')
#### 연습문제 1 ####
#install.packages("ggplot2")
library(ggplot2)
mpg <- as.data.frame(ggplot2::mpg)    # 바꿔놓
# 통합연비 파생변수(total)를 만들고 통합연비로 내림차순 정렬을 한 후에 3개의 행만 선택해서 조회
# 통합연비 : total <- (cty + hwy)/2
#mpg %>% mutate(total=(cty+hwy)/2) %>% arrange(desc(total)) %>% head(3)
mpg$tot <- mpg %>% summarise(cty, hwy)
mpg <- as.data.frame(ggplot2::mpg)    # 바꿔놓
str(mpg)
#View(mpg)
head(mpg)
# 통합연비 파생변수(total)를 만들고 통합연비로 내림차순 정렬을 한 후에 3개의 행만 선택해서 조회
# 통합연비 : total <- (cty + hwy)/2
#mpg %>% mutate(total=(cty+hwy)/2) %>% arrange(desc(total)) %>% head(3)
mpg$tot <- mpg %>% summarise(tot=mean(cty, hwy))
source("C:/datastudy/rwork/BasicProject/4-DataProcess.R", encoding = 'UTF-8')
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
raw_welfare <- read.spss("../data/Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
welfare <- raw_welfare
head(welfare)
View(welfare)
str(welfare)
summary(welfare)
welfare <- rename(welfare,
sex=h10_g3, birth=h10_g4, marriage=h10_g10, religion=h10_g11,
income=p1002_8aq1, code_job=h10_eco9, code_region=h10_reg7)
raw_welfare <- read.spss("../data/Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
raw_welfare <- read.spss("../data/Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
welfare <- raw_welfare
head(welfare)
welfare <- rename(welfare,
sex=h10_g3, birth=h10_g4, marriage=h10_g10, religion=h10_g11,
income=p1002_8aq1, code_job=h10_eco9, code_region=h10_reg7)
# 성별에 따른 월급 차이- 성별에 따라 월급이 다를까?
table(welfare$sex)
# 성별에 따른 월급 차이- 성별에 따라 월급이 다를까?
class(welfare$sex)
table(welfare$sex)
welfare <- ifelse(welfare ==1, "male", "female")
table(welfare$sex)
table(welfare$sex)
raw_welfare <- read.spss("../data/Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
welfare <- raw_welfare
welfare <- rename(welfare,
sex=h10_g3, birth=h10_g4, marriage=h10_g10, religion=h10_g11,
income=p1002_8aq1, code_job=h10_eco9, code_region=h10_reg7)
welfare <- ifelse(welfare ==1, "male", "female")
table(welfare$sex)
head(welfare$sex)
welfare$sex
# 성별에 따른 월급 차이- 성별에 따라 월급이 다를까?
class(welfare$sex)
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
raw_welfare <- read.spss("../data/Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
welfare <- raw_welfare
View(welfare)
welfare <- rename(welfare,
sex=h10_g3, birth=h10_g4, marriage=h10_g10, religion=h10_g11,
income=p1002_8aq1, code_job=h10_eco9, code_region=h10_reg7)
View(welfare)
# 성별에 따른 월급 차이- 성별에 따라 월급이 다를까?
class(welfare$sex)
table(welfare$sex)
welfare <- ifelse(welfare ==1, "male", "female")
welfare$sex
table(welfare$sex)
library(foreign)
library(readxl)
raw_welfare <- read.spss("../data/Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
welfare <- raw_welfare
welfare <- rename(welfare,
sex=h10_g3, birth=h10_g4, marriage=h10_g10, religion=h10_g11,
income=p1002_8aq1, code_job=h10_eco9, code_region=h10_reg7)
# 성별에 따른 월급 차이- 성별에 따라 월급이 다를까?
class(welfare$sex)
table(welfare$sex)
welfare <- ifelse(welfare ==1, "male", "female")
table(welfare$sex)
table(welfare$sex)
table(welfare$sex)
# 성별에 따른 월급 차이- 성별에 따라 월급이 다를까?
class(welfare$sex)
raw_welfare <- read.spss("../data/Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
welfare <- raw_welfare
welfare <- rename(welfare,
sex=h10_g3, birth=h10_g4, marriage=h10_g10, religion=h10_g11,
income=p1002_8aq1, code_job=h10_eco9, code_region=h10_reg7)
# 성별에 따른 월급 차이- 성별에 따라 월급이 다를까?
class(welfare$sex)
table(welfare$sex)
View(welfare)
welfare <- ifelse(welfare$sex ==1, "male", "female")
table(welfare$sex)
welfare$sex <- ifelse(welfare$sex ==1, "male", "female")
table(welfare$sex)
# 성별에 따른 월급 차이- 성별에 따라 월급이 다를까?
class(welfare$sex)
raw_welfare <- read.spss("../data/Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
welfare <- raw_welfare
welfare <- rename(welfare,
sex=h10_g3, birth=h10_g4, marriage=h10_g10, religion=h10_g11,
income=p1002_8aq1, code_job=h10_eco9, code_region=h10_reg7)
# 성별에 따른 월급 차이- 성별에 따라 월급이 다를까?
class(welfare$sex)
table(welfare$sex)
table(welfare$sex)
welfare$sex <- ifelse(welfare$sex == 1, "male", "female")
table(welfare$sex)
qplot(welfare$sex)
View(welfare)
str(welfare)
summary(welfare$income)
class(welfare$income)
qplot(welfare$income)
qplot(welfare$income) + xlim(0, 1000)
qplot(welfare$income) + xlim(0, 1700)
qplot(welfare$income) + xlim(0, 1500)
summary(welfare$income)
welfare$income <- ifelse(welfare$income == 0 | welfare$income == 9999, "NA", welfare$income)
table(welfare$income)
summary(welfare$income)
table(welfare$income)
table(is.na(welfare$income))
welfare$income <- ifelse(welfare$income %in% c(0, 9999), "NA", welfare$income)
table(is.na(welfare$income))
welfare$income <- ifelse(welfare$income %in% c(0, 9999), NA, welfare$income)
table(is.na(welfare$income))
summary(welfare$income)
welfare <- rename(welfare,
sex=h10_g3, birth=h10_g4, marriage=h10_g10, religion=h10_g11,
income=p1002_8aq1, code_job=h10_eco9, code_region=h10_reg7)
raw_welfare <- read.spss("../data/Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
welfare <- raw_welfare
welfare <- rename(welfare,
sex=h10_g3, birth=h10_g4, marriage=h10_g10, religion=h10_g11,
income=p1002_8aq1, code_job=h10_eco9, code_region=h10_reg7)
# 성별에 따른 월급 차이- 성별에 따라 월급이 다를까?
class(welfare$sex)
table(welfare$sex)
welfare$sex <- ifelse(welfare$sex == 1, "male", "female")
table(welfare$sex)
qplot(welfare$sex)
class(welfare$income)
summary(welfare$income)
qplot(welfare$income)
qplot(welfare$income) + xlim(0, 1500)  # 표현 범위 조절
ifelse(welfare$income %in% c(0, 9999), NA, welfare$income)
welfare$income <- ifelse(welfare$income %in% c(0, 9999), NA, welfare$income)
table(is.na(welfare$income))
summary(welfare$income)
library(dplyr)
# 분석
sex_income <- welfare %>% filter(!is.na(income)) %>% group_by(sex) %>% summarise(mean_income=mean(income))
sex_income
library(ggplot2)
qplot(sex_income)
ggplot(data=sex_income, aes(sex, mean_income)) + geom_col()
#시각화
ggplot(data=sex_income, aes(sex, mean_income))
#시각화
ggplot(data=sex_income, aes(sex, mean_income)) + geom_col()
str(welfare)
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
raw_welfare <- read.spss("../data/Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
raw_welfare <- read.spss("../data/Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
welfare <- raw_welfare
welfare <- rename(welfare,
sex=h10_g3, birth=h10_g4, marriage=h10_g10, religion=h10_g11,
income=p1002_8aq1, code_job=h10_eco9, code_region=h10_reg7)
#### 3. 나이와 월급의 관계 - 몇살 때 월급을 가장 많이 받을까?
str(welfare$birth)
class(welfare$birth)
table(birth)
table(welfare$birth)
summary(welfare$birth)
is.na(welfare$birth)
table(is.na(welfare$birth))
welfare$age <- 2015 - welfare$birth + 1
summary(welfare$age)
qplot(welfare$birth)
qplot(welfare$age)
table(is.na(welfare$income))
age_income <- welfare %>% filter(!is.a(income)) %>% group_by(age) %>% summarise(mean_income=mean(income))
age_income <- welfare %>% filter(!is.na(income)) %>% group_by(age) %>% summarise(mean_income=mean(income))
age_income
ggplot(data = age_income, aes(age, mean_income)) + geom_col()
ggplot(data = age_income, aes(age, mean_income)) + geom_line()
age_income <- welfare %>% filter(!is.na(income)) %>% group_by(age) %>% summarise(mean_income=mean(income)) %>%
order_by(mean_income, desc())
age_income <- welfare %>% filter(!is.na(income)) %>% group_by(age) %>% summarise(mean_income=mean(income)) %>%
order_by(mean_income) %>% desc()
age_income <- welfare %>% filter(!is.na(income)) %>% group_by(age) %>% summarise(mean_income=mean(income)) %>%
arrange(desc(mean_income))
age_income
ggplot(data = age_income, aes(age, mean_income)) + geom_line()
age_income <- welfare %>% filter(!is.na(income)) %>% group_by(age) %>% summarise(mean_income=mean(income)) %>%
arrange(desc(mean_income))
age_income
ggplot(data = age_income, aes(age, mean_income)) + geom_line()
head(age_income)
summary(welfare)
head(welfare)
str(welfare)
summary(welfare$income)
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
raw_welfare <- read.spss("../data/Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
welfare <- raw_welfare
welfare <- rename(welfare,
sex=h10_g3, birth=h10_g4, marriage=h10_g10, religion=h10_g11,
income=p1002_8aq1, code_job=h10_eco9, code_region=h10_reg7)
welfare$sex <- ifelse(welfare$sex == 1, "male", "female")
welfare$income <- ifelse(welfare$income %in% c(0, 9999), NA, welfare$income)  # 이상치 결측 처리
# 분석
sex_income <- welfare %>% filter(!is.na(income)) %>% group_by(sex) %>% summarise(mean_income=mean(income))
welfare$age <- 2015 - welfare$birth + 1
# 분석
age_income <- welfare %>% filter(!is.na(income)) %>% group_by(age) %>% summarise(mean_income=mean(income)) %>%
arrange(desc(mean_income))
#### 3. 연령대에 따른 월급차이 - 어떤 연령대의 월급이 가장 많을까?
welfare <- welfare %>% mutate(ageg = ifelse(age<30, "young", ifelse(age<= 59, "middle", "old")))
ageg_income <-  welfare %>% filter(!is.na(income)) %>% group_by(ageg) %>% summarise(mean_income=mean(income))
sex_income <- welfare %>% filter(!is.na(income)) %>% group_by(ageg, sex) %>% summarise(mean_income=mean(income))
# 연령대 아닌 연령, 성별로 표현
sex_age <- welfare %>% filter(!is.na(income)) %>% group_by(age, sex) %>% summarise(mean_income=mean(income))
list_job <- read_excel("../data/Koweps_Codebook.xlsx", col_names=T, sheet=2)
# 전처리
welfare <- left_join(welfare, list_job, by="code_job")   # code_job 기준으로 결합
job_income <- welfare %>% filter(!is.na(code_job) & !is.na(income)) %>% group_by(job) %>%
summarise(mean_income=mean(income))
top10 <- job_income %>% arrange(desc(mean_income)) %>% head(10)
# 하위 10 직업들
bottom10 <- job_income %>% arrange(mean_income) %>% head(10)
### 6. 성별 직업 빈도- 성별로 어떤 직업이 가장 많을까?
# 남자의 직업별 사람 수
job_male <- welfare %>% filter(!is.na(job) & sex=="male") %>% group_by(job) %>% summarise(count=n()) %>%
arrange(desc(count)) %>% head(10)
# 여자의 직업별 사람 수
job_female <- welfare %>% filter(!is.na(job) & sex=="female") %>% group_by(job) %>%
summarise(count=n()) %>% arrange(desc(count)) %>% head(10)
welfare$religion <- ifelse(welfare$religion == 1, "yes", "no")
welfare$group_marriage <- ifelse(welfare$marriage==1, "marriage",
ifelse(welfare$marriage==3, "divorce", NA))  # 두가지 빼곤 NA처리
# 분석 (소숫점 첫째짜리까지 비율 구하기)
religion_marriage <- welfare %>% filter(!is.na(group_marriage)) %>% group_by(religion, group_marriage) %>%
summarise(count=n()) %>% mutate(tot_group = sum(count)) %>% mutate(pct = round((count/tot_group)*100, 1))
# 이혼만 추출
divorce <- religion_marriage %>% filter(group_marriage=="divorce") %>% select(religion, pct)
mutate(tot_group = sum(count)) %>% mutate(pct = round((count/tot_group)* 100, 1)
# 연령대별
ageg_marriage <- welfare %>% filter(!is.na(group_marriage)) %>% group_by(ageg, group_marriage) %>% summarise(count = n()) %>%
mutate(tot_group = sum(count)) %>% mutate(pct = round((count/tot_group)* 100, 1))
# 연령대별
ageg_marriage <- welfare %>% filter(!is.na(group_marriage)) %>% group_by(ageg, group_marriage) %>% summarise(count = n()) %>%
mutate(tot_group = sum(count)) %>% mutate(pct = round((count/tot_group)*100, 1))
ageg_marriage
ageg_divorce <- ageg_marriage %>% filter(ageg != "young" & group_marriage == "divorce") %>% select(ageg, pct)
ageg_divorce
ggplot(data=ageg_divorce, aes(ageg, pct)) + geom_col()
# 연령대 및 종교유무에 따른 이혼율
ageg_religion_marriage <- welfare %>% filter(!is.na(group_marriage) & ageg != "young") %>% group_by(ageg, religion) %>%
summary(count = n()) %>% mutate(tot_group = sum(count)) %>% mutate(pct = round((count/tot_group)*100, 1))
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
# 연령대 및 종교유무에 따른 이혼율
ageg_religion_marriage <- welfare %>% filter(!is.na(group_marriage) & ageg != "young") %>% group_by(ageg, religion) %>%
summary(count = n()) %>% mutate(tot_group = sum(count)) %>% mutate(pct = round((count/tot_group)*100, 1))
ageg_religion_marriage
# 연령대 및 종교유무에 따른 이혼율
ageg_religion_marriage <- welfare %>% filter(!is.na(group_marriage) & ageg != "young") %>% group_by(ageg, religion) %>%
summary(count = n()) %>% mutate(tot_group = sum(count)) %>% mutate(pct = round((count/tot_group)*100, 1))
ageg_religion_marriage
# 초년 제외한 연령대별 이혼율
ageg_divorce <- ageg_marriage %>% filter(ageg != "young" & group_marriage == "divorce") %>% select(ageg, pct)
ageg_divorce
ggplot(data=ageg_divorce, aes(ageg, pct)) + geom_col()
# 연령대 및 종교유무에 따른 이혼율
ageg_religion_marriage <- welfare %>% filter(!is.na(group_marriage) & ageg != "young") %>% group_by(ageg, religion) %>%
summary(count = n()) %>% mutate(tot_group = sum(count)) %>% mutate(pct = round((count/tot_group)*100, 1))
ggplot(data=divorce, aes(religion, pct)) + geom_col()
# 연령대 및 종교유무에 따른 이혼율
ageg_religion_marriage <- welfare %>% filter(!is.na(group_marriage) & ageg != "young") %>% group_by(ageg, religion, group_marriage) %>% summary(count = n()) %>% mutate(tot_group = sum(count)) %>% mutate(pct = round((count/tot_group)*100, 1))
bottom10
# 연령대 및 종교유무에 따른 이혼율
ageg_religion_marriage <- welfare %>% filter(!is.na(group_marriage) & ageg != "young") %>% group_by(ageg, religion, group_marriage) %>% summary(count = n()) %>% mutate(tot_group = sum(count)) %>% mutate(pct = round((count/tot_group)*100, 1))
ageg_religion_marriage
# 연령대 및 종교유무에 따른 이혼율
ageg_religion_marriage <- welfare %>% filter(!is.na(group_marriage) & ageg != "young") %>%
group_by(ageg, religion, group_marriage) %>% summarise(count = n()) %>%
mutate(tot_group = sum(count)) %>% mutate(pct = round((count/tot_group)*100, 1))
# 연령대 및 종교유무에 따른 이혼율
ageg_religion_marriage <- welfare %>% filter(!is.na(group_marriage) & ageg != "young") %>%
group_by(ageg, religion, group_marriage) %>% summarise(count = n()) %>%
mutate(tot_group = sum(count)) %>% mutate(pct = round((count/tot_group)*100, 1))
ageg_religion_marriage
ggplot(data=ageg_religion_marriage, aes(ageg, pct, fill=religion)) + geom_col()
ggplot(data=ageg_religion_marriage, aes(ageg, pct, fill=religion)) + geom_col(position="dodge")
class(welfare$code_region)
table(welfare$code_region)
list_region <- data.frame(code_region = c(1:7),
region = c("서울", "수도권(인천/경기)", "부산/경남/울산", "대구/경북",
"대전/충남", "강원/충북", "광주/전남/전북/제주도"))
list_region
# 분석
region_ageg <- welfare %>% group_by(region, ageg) %>% summarise(count = n()) %>%
mutate(tot_group = sum(count)) %>% mutate(pct = round((count/tot_group)*100, 2))
list_region
welfare$region
welfare$code_region
welfare$list_region
# 분석
region_ageg <- welfare %>% group_by(code_region, ageg) %>% summarise(count = n()) %>%
mutate(tot_group = sum(count)) %>% mutate(pct = round((count/tot_group)*100, 2))
region_ageg
# 분석
region_ageg <- welfare %>% group_by(list_region$region, ageg) %>% summarise(count = n()) %>%
mutate(tot_group = sum(count)) %>% mutate(pct = round((count/tot_group)*100, 2))
# 분석
region_ageg <- welfare %>% group_by(code_region, ageg) %>% summarise(count = n()) %>%
mutate(tot_group = sum(count)) %>% mutate(pct = round((count/tot_group)*100, 2))
region_ageg
welfare <- left_join(welfare, list_region, by="code_region") # 추가
welfare$region
# 분석
region_ageg <- welfare %>% group_by(region, ageg) %>% summarise(count = n()) %>%
mutate(tot_group = sum(count)) %>% mutate(pct = round((count/tot_group)*100, 2))
region_ageg
# 시각화
ggplot(data=region_ageg, aes(region, pct, fill=ageg)) + geom_col()
# 시각화
ggplot(data=region_ageg, aes(region, pct, fill=ageg)) + geom_col() + coord_flip()
list_order_old <- region_ageg %>% filter(age=="old") %>% arrange(pct)
list_order_old <- region_ageg %>% filter(ageg=="old") %>% arrange(pct)
list_order_old
# 지역명 순서 변수
order <- list_order_old$region
order
# 시각화
ggplot(data=region_ageg, aes(region, pct, fill=ageg)) + geom_col() + coord_flip() +
scale_x_discrete(limits = order)
# 시각화
ggplot(data=sex_income, aes(ageg, mean_income, fill=sex)) + geom_col() +
scale_x_discrete(limits=c("young", "middle", "old"))
# 시각화
ggplot(data=region_ageg, aes(region, pct, fill=ageg)) + geom_col() + coord_flip() +
scale_x_discrete(limits = order)
# 연령대 순
region_ageg$ageg <- factor(region_ageg$ageg, level=c("old", "middle", "young"))
class(region_ageg$ageg)
levels(region_ageg$ageg)
ggplot(data=region_ageg, aes(region, pct, fill=ageg)) + geom_col() + coord_flip() +
scale_x_discrete(limits = order)
head(region_ageg)
