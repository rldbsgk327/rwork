
* 배열(Array) ~~ 행렬
  0) R의 기본데이터 구조가 배열이다. 파이썬은 배열 없다.
  1) '같은 형식'끼리 묶어준다.(숫자는 숫자끼리, 문자는 문자끼리)
  2) 크기가 정해져 있다.
  3) 삽입 삭제가 불편
  
  
* 데이터 타입관련 기본 함수
  1) is.xxx() : ()가 xxx 타입이 맞는지 확인
  2) as.xxx() : ()를 xxx타입으로 바꿔주겠다
  
  
  

ㄱ. 데이터 타입(데이터 구조) 
=============================

(1) 스칼라(0차원:1개의 데이터 ~~ 파이썬 int)
  - 숫자(numeric)--연속, 문자열(character), boolean, factor--범주, 결측치(NA, NaN, null, Inf)

(2) Vector(1차원 ~~ 파이썬 list): 기본 데이터 타입

(3) Matrix(2차원)

(4) DataFrame(2차원 ~~ table): 배열이 아니다. 다른 형식끼리 가능 but 성능 느림

(5) Array(3차원 이상)

(6) List(3차원 이상): 배열이 아니다, 다른 형식끼리 가능
--------------------------------------------------------------


1.Vector
  (1) 기본 자료 구조
  (2) 1차원 배열
  (3) 인덱스 접근
  (4) 동일한 자료형만 저장
  (5) c(), seq(), rep(), ....

+ 데이터 형식
  숫자(양적 데이터): 연속 / 이산
          ``연속: 셀 수 없는... 나이 24년 ~개월 ~일 ~초...
          
  문자(질적 데이터): 명목 / 서열
          ``명목(범주 데이터):  20대(20~29), 30대, 40대 : 연속->범주형 데이터로 변환
       
          
  
2. Factor
  (1) 범주형 데이터
  
  -양적 데이터
    '연속 데이터(비율 or 확률) : 특정구간에서 값 무한, 셀 수 없다.    ex> 무게, 가격
    '이산 데이터(등간)   : 0의 개념X, 특정 구간, 셀 수 있다. '같은 간격'의 숫자  ex> 설문지 문항, 아이큐, 온도 
  -질적 데이터
    '명목 데이터(범주형)   ex> 색깔, 브랜드
    '서열 데이터   ex> 소프트웨어 버전(숫자 자체에 의미는 없다. 붙히기 나름!), 자동차 생산 연도(연식)
  
  
  
3. Matrix
  (1) 행과 열의 2차원 배열
  (2) 동일한 데이터 타입만 저장 가능
  (3) matrix(), rbind(), cbind(), ...


4. DataFrame
  (1) DB의 TABLE과 유사
  (2) R에서 가장 많이 사용되는 구조
  (3) '컬럼 단위로' 서로 다른 데이터타입 사용 가능
  (4) data.frame(), read.csv(), read.delim(), read.table(), ...


5. Array
  (1) 행, 열, 면의 3차원 배열 형태의 객체 생성
  (2) array()


6. List
  (1) key 와 value와 한쌍
  (2) pythondml dict와 유사
  (3) list()

-----------------------------------------------------------------------------

ㄴ. Regular Expression

1. 반복
  1) * : 0번이상 반복
    ab* : a, ab, abb, abbb, abbbb ....
    
  2) +: 1번 이상 반복
    ab+: ab, abbb
  
  3) ? : 0회, 또는 1회
    ab?:  a, ab
  
  4) {m} : m회반복
    a{3}b: 
    
  5) {m,n}: m회부터 n회까지 반복
    a{2, 3}bc: aabc, aaabc

2. 매칭
  1) . : 줄바꿈 문자를 제외한 모든 문자와 일치
    a.b : aab, abb, acb, afb, ...
  
  2) ^ : 문자열의 시작
    ^abc :abc...
    
  3) $ : 문자열의 마지막
    $a : a로 끝나야 한다, fdsa, avfsa, ...
    
  4) []: 문자 집합 중 한 문자와 매치
    [abc]xyz:  axyz, cxyz, bxyz
    [a-z]bc: abc, bbc, cbc, dbc, .... , zbc
    a[.]b :대괄호 안에서 쓰이면 진짜 .을 의미, a.b
    [a^bc]hello  : 대괄호 안에서 ^ 쓰이면 해당문자(b) 무시한다.
                    ahello, chello
    [a-zA-Z0-9]hello: 특수문자를 제외한 모든 문자와 숫자
  
3. 특수문자(\문자)
  1) \d : 모든 숫자와 매치
    ab\d\dc:  ab28c, ab00c, ...
  
  2) \D: 숫자가 아닌 '문자'와 매치
  
  3) \s :공백문자와 매치
  
  4) \S :공백문자를 제외한, 모든 것과 매치
  
  5) \w: 숫자 또는 문자와 매치
  
  6) \W: 숫자 또는 문자가 아닌, 모든 문자와 매치
  
  

---------------------------------------------------------------------
ㄷ. 기술 통계량
  1) min(vec), max(vec)
  2) range(vec): 벡터를 대상으로 범위 값을 구하는 함수
  3) mean(vec), median(vec)
  4) sum(vec)
  5) order(vec)
  6) rank(vec)
  7) sd(vec), var(vec)
  8) quantile(vec)
  9) table(vec)
  10) str()
  11) sample(x, y): x의 범위에서 y만큼 샘플데이터를 생성하는 함수
  12) head(), tail()
  13) unique()
  ...



---------------------------------------------------------------------
ㄹ. Data PreProcessing (전처리)

1. 순서
   데이터 탐색 => 결측치 처리 => 이상치 처리 => Feature(분석에 필요한 컬럼) Engineering

2. 데이터 탐색
    (1) 변수 확인
    (2) 변수 유형(범주형, 연속형, 문자형, 숫자형,...)
    (3) 변수의 통계량
    (4) 변수와(끼리) 관계, 평균차이 검증(마지막 분석단계에서도 사용)


3. 결측치 처리
    (1) 다른 값으로 대체(평균, 최빈값, 중간값,...)
    (2) 삭제
    (3) 예측: 선형 회귀분석, 로지스틱 회귀분석

4. 이상치 처리
    (1) 이상치 탐색
      - 시각적인 확인: 산포도(산점도, scatter plot), 상자도표(box plot)
      - 통계적 확인: 표준 편차(=잔차), leverage, Cook's D 
  
    (2) 처리 방법
      - 다른 값으로 대체
      - 리샘플링(케이스별로 분리)
      - 삭제
      
5. Feature Engineering      
    (1) Scaling : 단위 변경(크기 비슷하게 맞추기)
      - 표준화, 정규화
    (2) Bining: 연속형 변수를 범주형 변수로 변환
    (3) Dummy: 범주형 변수를 연속형 변수로 변환 ..머신러닝딥러닝
    (4) Transform: 기존 존재하는 변수의 성질을 이용해 다른 변수를 만드는 방법
    ...
    
------------------------------------------------------------------------------
ㅁ. dplyr

  (1) filter() : 행 추출  -> subset(), 데이터[행 추출조건, ], sql의 where와 유사
  (2) select() : 열 추출 -> 데이터[, 열 추출 조건], sql의 select와 유사
  (3) arrange() : 정렬 -> order(), sort()
  (4) mutate() : 열 추가
  (5) summarize() : 통계량 산출 (여러개 데이터들을 대표값으로 차원축소)
  (6) groupby() : 집단별로 나누기
  (7) left_join() : 데이터 합치기(열 기준)
  (8) bind_rows() : 데이터 합치기(행 기준)




































  